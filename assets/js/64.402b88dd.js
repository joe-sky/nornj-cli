(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{219:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),a("h2",{attrs:{id:"通用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用指南","aria-hidden":"true"}},[t._v("#")]),t._v(" 通用指南")]),t._v(" "),a("p",[t._v("如果你用 Vue CLI 处理静态资源并和后端框架一起作为部署的一部分，那么你需要的仅仅是确保 Vue CLI 生成的构建文件在正确的位置，并遵循后端框架的发布方式即可。")]),t._v(" "),a("p",[t._v("如果你独立于后端部署前端应用——也就是说后端暴露一个前端可访问的 API，然后前端实际上是纯静态应用。那么你可以将 "),a("code",[t._v("dist")]),t._v(" 目录里构建的内容部署到任何静态文件服务器中，但要确保正确的 "),a("router-link",{attrs:{to:"/zh/config/#publicpath"}},[t._v("publicPath")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"本地预览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地预览","aria-hidden":"true"}},[t._v("#")]),t._v(" 本地预览")]),t._v(" "),a("p",[a("code",[t._v("dist")]),t._v(" 目录需要启动一个 HTTP 服务器来访问 (除非你已经将 "),a("code",[t._v("publicPath")]),t._v(" 配置为了一个相对的值)，所以以 "),a("code",[t._v("file://")]),t._v(" 协议直接打开 "),a("code",[t._v("dist/index.html")]),t._v(" 是不会工作的。在本地预览生产环境构建最简单的方式就是使用一个 Node.js 静态文件服务器，例如 "),a("a",{attrs:{href:"https://github.com/zeit/serve",target:"_blank",rel:"noopener noreferrer"}},[t._v("serve"),a("OutboundLink")],1),t._v("：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g serve\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -s 参数的意思是将其架设在 Single-Page Application 模式下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个模式会处理即将提到的路由问题")]),t._v("\nserve -s dist\n")])])]),a("h3",{attrs:{id:"使用-history-pushstate-的路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-history-pushstate-的路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 "),a("code",[t._v("history.pushState")]),t._v(" 的路由")]),t._v(" "),a("p",[t._v("如果你在 "),a("code",[t._v("history")]),t._v(" 模式下使用 Vue Router，是无法搭配简单的静态文件服务器的。例如，如果你使用 Vue Router 为 "),a("code",[t._v("/todos/42/")]),t._v(" 定义了一个路由，开发服务器已经配置了相应的 "),a("code",[t._v("localhost:3000/todos/42")]),t._v(" 响应，但是一个为生产环境构建架设的简单的静态服务器会却会返回 404。")]),t._v(" "),a("p",[t._v("为了解决这个问题，你需要配置生产环境服务器，将任何没有匹配到静态文件的请求回退到 "),a("code",[t._v("index.html")]),t._v("。Vue Router 的文档提供了"),a("a",{attrs:{href:"https://router.vuejs.org/zh/guide/essentials/history-mode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用服务器配置指引"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors","aria-hidden":"true"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),a("p",[t._v("如果前端静态内容是部署在与后端 API 不同的域名上，你需要适当地配置 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"pwa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pwa","aria-hidden":"true"}},[t._v("#")]),t._v(" PWA")]),t._v(" "),a("p",[t._v("如果你使用了 PWA 插件，那么应用必须架设在 HTTPS 上，这样 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Service Worker"),a("OutboundLink")],1),t._v(" 才能被正确注册。")]),t._v(" "),a("h2",{attrs:{id:"platform-guides"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platform-guides","aria-hidden":"true"}},[t._v("#")]),t._v(" Platform Guides")]),t._v(" "),a("p",[t._v("(暂未翻译，此部分英文文档处于开放贡献中)")]),t._v(" "),a("h3",{attrs:{id:"github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-pages","aria-hidden":"true"}},[t._v("#")]),t._v(" GitHub Pages")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在 "),a("code",[t._v("vue.config.js")]),t._v(" 中设置正确的 "),a("code",[t._v("publicPath")]),t._v("。")]),t._v(" "),a("p",[t._v("如果打算将项目部署到 "),a("code",[t._v("https://<USERNAME>.github.io/")]),t._v(" 上 , "),a("code",[t._v("publicPath")]),t._v(" 将默认被设为 "),a("code",[t._v('"/"')]),t._v("，你可以忽略这个参数。")]),t._v(" "),a("p",[t._v("如果打算将项目部署到 "),a("code",[t._v("https://<USERNAME>.github.io/<REPO>/")]),t._v(" 上, (换句话说 仓库地址为 "),a("code",[t._v("https://github.com/<USERNAME>/<REPO>")]),t._v("), 可将 "),a("code",[t._v("publicPath")]),t._v(" 设为 "),a("code",[t._v('"/<REPO>/"')]),t._v(' 。 举个例子， 如果仓库名字为 "my-project"，'),a("code",[t._v("vue.config.js")]),t._v(" 的内容应如下所示:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  publicPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/my-project/'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在项目目录下， 用以下的代码创建 "),a("code",[t._v("deploy.sh")]),t._v("（可以适当地取消注释）并运行它以进行部署：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当发生错误时中止脚本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -e\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd 到构建输出的目录下 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" dist\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到自定义域域名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo 'www.example.com' > CNAME")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 https://<USERNAME>.github.io")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 https://<USERNAME>.github.io/<REPO>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" -\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("您还可以在 CI 设置中配置上述脚本，以便在每次推送时启用自动部署。")])])])]),t._v(" "),a("h3",{attrs:{id:"gitlab-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-pages","aria-hidden":"true"}},[t._v("#")]),t._v(" GitLab Pages")]),t._v(" "),a("p",[t._v("根据 "),a("a",{attrs:{href:"https://docs.gitlab.com/ee/user/project/pages/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Pages 文档"),a("OutboundLink")],1),t._v("的描述，所有的配置都在根目录中的"),a("code",[t._v(".gitlab-ci.yml")]),t._v(" 文件中。下面的范例是一个很好的入门:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .gitlab-ci.yml 文件应放在你仓库的根目录下 ")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 必须定义一个名为 pages 的 job")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm ci\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mv public public"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GitLab Pages 的钩子设置在 public 文件夹")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mv dist public "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名 dist 文件夹 (npm run build 之后的输出位置)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" public "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# artifact path 一定要在 /public , 这样 GitLab Pages 才能获取")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])])]),a("p",[t._v("通常, 你的静态页面将托管在 https://yourUserName.gitlab.io/yourProjectName 上, 所以你可以创建一个 initial "),a("code",[t._v("vue.config.js")]),t._v(" 文件去 "),a("a",{attrs:{href:"https://github.com/vuejs/vue-cli/tree/dev/docs/config#baseurl",target:"_blank",rel:"noopener noreferrer"}},[t._v("更新 "),a("code",[t._v("BASE_URL")]),a("OutboundLink")],1),t._v(" 要匹配的值 ：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue.config.js 位于仓库的根目录下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保用 GitLab 项目的名称替换了 `YourProjectName`")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  publicPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/yourProjectName/'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("请阅读在 "),a("a",{attrs:{href:"https://docs.gitlab.com/ee/user/project/pages/getting_started_part_one.html#gitlab-pages-domain",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Pages domains"),a("OutboundLink")],1),t._v(" 的文档来学习更多关于页面部署 URL 的信息。注意，你也可以"),a("a",{attrs:{href:"https://docs.gitlab.com/ee/user/project/pages/getting_started_part_three.html#adding-your-custom-domain-to-gitlab-pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用自定义域名"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("在推送到仓库之前提交 "),a("code",[t._v(".gitlab-ci.yml")]),t._v(" 和 "),a("code",[t._v("vue.config.js")]),t._v(" 文件。GitLab CI 的管道将会被触发: 当成功时候, 到 "),a("code",[t._v("Settings > Pages")]),t._v(" 查看关于网站的链接。")]),t._v(" "),a("h3",{attrs:{id:"netlify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#netlify","aria-hidden":"true"}},[t._v("#")]),t._v(" Netlify")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在 Netlify 上，使用以下设置从 GitHub 创建新项目:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("构建命令:")]),t._v(" "),a("code",[t._v("npm run build")]),t._v(" or "),a("code",[t._v("yarn build")])]),t._v(" "),a("li",[a("strong",[t._v("发布目录:")]),t._v(" "),a("code",[t._v("dist")])])])]),t._v(" "),a("li",[a("p",[t._v("点击 deploy 按钮！")])])]),t._v(" "),a("p",[t._v("也可以查看 "),a("a",{attrs:{href:"https://github.com/netlify/vue-cli-plugin-netlify-lambda",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-cli-plugin-netlify-lambda"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"amazon-s3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amazon-s3","aria-hidden":"true"}},[t._v("#")]),t._v(" Amazon S3")]),t._v(" "),a("p",[t._v("见 "),a("a",{attrs:{href:"https://github.com/multiplegeorges/vue-cli-plugin-s3-deploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-cli-plugin-s3-deploy"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"firebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firebase","aria-hidden":"true"}},[t._v("#")]),t._v(" Firebase")]),t._v(" "),a("p",[t._v("创建一个新的 Firebase 项目 "),a("a",{attrs:{href:"https://console.firebase.google.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Firebase console"),a("OutboundLink")],1),t._v("。 请参考"),a("a",{attrs:{href:"https://firebase.google.com/docs/web/setup",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("确保已经全局安装了 "),a("a",{attrs:{href:"https://github.com/firebase/firebase-tools",target:"_blank",rel:"noopener noreferrer"}},[t._v("firebase-tools"),a("OutboundLink")],1),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install -g firebase-tools\n")])])]),a("p",[t._v("在项目的根目录下, 用以下命令初始化 "),a("code",[t._v("firebase")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("firebase init\n")])])]),a("p",[t._v("Firebase 将会询问有关初始化项目的一些问题。")]),t._v(" "),a("ul",[a("li",[t._v("选择需要 Firebase CLI 的功能。 一定要选择 "),a("code",[t._v("hosting")]),t._v(" 。")]),t._v(" "),a("li",[t._v("选择默认的 Firebase 项目。")]),t._v(" "),a("li",[t._v("将 "),a("code",[t._v("public")]),t._v(" 目录设为 "),a("code",[t._v("dist")]),t._v(" (或构建输出的位置) 这将会上传到 Firebase Hosting。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// firebase.json")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hosting"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"public"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("选择 "),a("code",[t._v("yes")]),t._v(" 设置项目为一个单页应用。 这将会创建一个 "),a("code",[t._v("index.html")]),t._v(" 在 "),a("code",[t._v("dist")]),t._v(" 文件夹并且配置 "),a("code",[t._v("hosting")]),t._v(" 信息。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// firebase.json")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hosting"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rewrites"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"destination"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index.html"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("执行 "),a("code",[t._v("npm run build")]),t._v(" 去构建项目。")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("Firebase Hosting")]),t._v(" 部署项目，执行以下命令 ：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("firebase deploy --only hosting\n")])])]),a("p",[t._v("如果需要在部署的项目中使用的其他 Firebase CLI 功能， 执行 "),a("code",[t._v("firebase deploy")]),t._v(" 去掉 "),a("code",[t._v("--only")]),t._v(" 参数。")]),t._v(" "),a("p",[t._v("现在可以到 "),a("code",[t._v("https://<YOUR-PROJECT-ID>.firebaseapp.com")]),t._v(" 访问你的项目了。")]),t._v(" "),a("p",[t._v("请参考 "),a("a",{attrs:{href:"https://firebase.google.com/docs/hosting/deploying",target:"_blank",rel:"noopener noreferrer"}},[t._v("Firebase 文档"),a("OutboundLink")],1),t._v(" 来获取更多细节。")]),t._v(" "),a("h3",{attrs:{id:"now"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#now","aria-hidden":"true"}},[t._v("#")]),t._v(" Now")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("全局安装 Now CLI: "),a("code",[t._v("npm install -g now")])])]),t._v(" "),a("li",[a("p",[t._v("添加 "),a("code",[t._v("now.json")]),t._v(" 文件到项目根目录 ：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-example-app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"static"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"public"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rewrites"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"destination"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index.html"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"alias"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue-example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("您可以通过阅读来进一步了解自定义静态服务的信息 "),a("a",{attrs:{href:"https://zeit.co/docs/deployment-types/static",target:"_blank",rel:"noopener noreferrer"}},[t._v("Now's 文档"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("在 "),a("code",[t._v("package.json")]),t._v(" 中添加部署脚本：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && now && now alias"')]),t._v("\n")])])]),a("p",[t._v("如果想要将项目默认公开部署，部署脚本如下")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && now --public && now alias"')]),t._v("\n")])])]),a("p",[t._v("这将自动将站点的别名指向最新的部署。现在，只要运行 "),a("code",[t._v("npm run deploy")]),t._v(" 就可以部署你的应用。")])])]),t._v(" "),a("h3",{attrs:{id:"stdlib"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdlib","aria-hidden":"true"}},[t._v("#")]),t._v(" Stdlib")]),t._v(" "),a("blockquote",[a("p",[t._v("TODO | Open to contribution.")])]),t._v(" "),a("h3",{attrs:{id:"heroku"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heroku","aria-hidden":"true"}},[t._v("#")]),t._v(" Heroku")]),t._v(" "),a("blockquote",[a("p",[t._v("TODO | Open to contribution.")])]),t._v(" "),a("h3",{attrs:{id:"surge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#surge","aria-hidden":"true"}},[t._v("#")]),t._v(" Surge")]),t._v(" "),a("p",[t._v("要使用 "),a("a",{attrs:{href:"http://surge.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Surge"),a("OutboundLink")],1),t._v(" 进行部署，步骤非常简单。")]),t._v(" "),a("p",[t._v("首先，通过运行 "),a("code",[t._v("npm run build")]),t._v(" 来构建项目。如果还没有安装 Surge 的命令行工具，可以通过运行命令来执行此操作：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install --global surge\n")])])]),a("p",[t._v("然后 cd 进入项目的 "),a("code",[t._v("dist/")]),t._v(" 文件夹，然后运行 "),a("code",[t._v("surge")]),t._v(" 并按照屏幕提示操作 。如果是第一次使用 Surge，它会要求设置电子邮件和密码。确认项目文件夹以及输入首选域来查看正在部署的项目，如下所示。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("            project: /Users/user/Documents/myawesomeproject/dist/\n         domain: myawesomeproject.surge.sh\n         upload: [====================] 100% eta: 0.0s (31 files, 494256 bytes)\n            CDN: [====================] 100%\n             IP: **.**.***.***\n\n   Success! - Published to myawesomeproject.surge.sh\n")])])]),a("p",[t._v("通过访问 "),a("code",[t._v("myawesomeproject.surge.sh")]),t._v(" 来确保你的项目已经成功的用 Surge 发布，有关自定义域名等更多设置详细信息，可以到 "),a("a",{attrs:{href:"https://surge.sh/help/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Surge's help page"),a("OutboundLink")],1),t._v(" 查看。")]),t._v(" "),a("h3",{attrs:{id:"bitbucket-cloud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitbucket-cloud","aria-hidden":"true"}},[t._v("#")]),t._v(" Bitbucket Cloud")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如 "),a("a",{attrs:{href:"https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitbucket 文档"),a("OutboundLink")],1),t._v(" 创建一个命名为 "),a("code",[t._v("<USERNAME>.bitbucket.io")]),t._v(" 的仓库。")])]),t._v(" "),a("li",[a("p",[t._v("如果你想拥有多个网站， 想要发布到主仓库的子文件夹中。这种情况下就要在 "),a("code",[t._v("vue.config.js")]),t._v(" 设置 "),a("code",[t._v("publicPath")]),t._v("。")]),t._v(" "),a("p",[t._v("如果部署到 "),a("code",[t._v("https://<USERNAME>.bitbucket.io/")]),t._v("， "),a("code",[t._v("publicPath")]),t._v(" 默认将被设为 "),a("code",[t._v('"/"')]),t._v("，你可以选择忽略它。")]),t._v(" "),a("p",[t._v("如果要部署到 "),a("code",[t._v("https://<USERNAME>.bitbucket.io/<SUBFOLDER>/")]),t._v("，设置 "),a("code",[t._v("publicPath")]),t._v(" 为 "),a("code",[t._v('"/<SUBFOLDER>/"')]),t._v("。在这种情况下，仓库的目录结构应该反映 url 结构，例如仓库应该有 "),a("code",[t._v("/<SUBFOLDER>")]),t._v(" 目录。")])]),t._v(" "),a("li",[a("p",[t._v("在项目中， "),a("code",[t._v("deploy.sh")]),t._v(" 使用以下内容创建并运行它以进行部署：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当发生错误时中止脚本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" -e\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd 到构建输出的目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" dist\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f git@bitbucket.org:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("USERNAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("USERNAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".bitbucket.io.git master\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" -\n")])])])])])])},[],!1,null,null,null);s.default=n.exports}}]);