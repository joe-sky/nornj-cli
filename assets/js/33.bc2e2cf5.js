(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{236:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"modes-and-environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modes-and-environment-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Modes and Environment Variables")]),e._v(" "),a("h2",{attrs:{id:"modes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modes","aria-hidden":"true"}},[e._v("#")]),e._v(" Modes")]),e._v(" "),a("p",[a("strong",[e._v("Mode")]),e._v(" is an important concept in Vue CLI projects. By default, there are three modes:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("development")]),e._v(" is used by "),a("code",[e._v("vue-cli-service serve")])]),e._v(" "),a("li",[a("code",[e._v("test")]),e._v(" is used by "),a("code",[e._v("vue-cli-service test:unit")])]),e._v(" "),a("li",[a("code",[e._v("production")]),e._v(" is used by "),a("code",[e._v("vue-cli-service build")]),e._v(" and "),a("code",[e._v("vue-cli-service test:e2e")])])]),e._v(" "),a("p",[e._v("You can overwrite the default mode used for a command by passing the "),a("code",[e._v("--mode")]),e._v(" option flag. For example, if you want to use development variables in the build command:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vue-cli-service build --mode development\n")])])]),a("p",[e._v("When running "),a("code",[e._v("vue-cli-service")]),e._v(", environment variables are loaded from all "),a("a",{attrs:{href:"#environment-variables"}},[e._v("corresponding files")]),e._v(". If they don't contain a "),a("code",[e._v("NODE_ENV")]),e._v(" variable, it will be set accordingly. For example, "),a("code",[e._v("NODE_ENV")]),e._v(" will be set to "),a("code",[e._v('"production"')]),e._v(" in production mode, "),a("code",[e._v('"test"')]),e._v(" in test mode, and defaults to "),a("code",[e._v('"development"')]),e._v(" otherwise.")]),e._v(" "),a("p",[e._v("Then "),a("code",[e._v("NODE_ENV")]),e._v(" will determine the primary mode your app is runnning in - development, production or test - and consequently, what kind of webpack config will be created.")]),e._v(" "),a("p",[e._v("With "),a("code",[e._v("NODE_ENV")]),e._v(' set to "test" for example, Vue CLI creates a webpack config that is intended to be used and optimized for unit tests. It doesn\'t process images and other assets that are unnecessary for unit tests.')]),e._v(" "),a("p",[e._v("Similarly, "),a("code",[e._v("NODE_ENV=development")]),e._v(" creates a webpack configuration which enables HMR, doesn't hash assets or create vendor bundles in order to allow for fast re-builds when running a dev server.")]),e._v(" "),a("p",[e._v("When you are running "),a("code",[e._v("vue-cli-service build")]),e._v(", your "),a("code",[e._v("NODE_ENV")]),e._v(' should always be set to "production" to obtain an app ready for deployment, regardless of the environment you\'re deploying to.')]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("NODE_ENV")]),e._v(" "),a("p",[e._v("If you have a default "),a("code",[e._v("NODE_ENV")]),e._v(" in your environment, you should either remove it or explicitly set "),a("code",[e._v("NODE_ENV")]),e._v(" when running "),a("code",[e._v("vue-cli-service")]),e._v(" commands.")])]),e._v(" "),a("h2",{attrs:{id:"environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment Variables")]),e._v(" "),a("p",[e._v("You can specify env variables by placing the following files in your project root:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v(".env                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# loaded in all cases")]),e._v("\n.env.local          "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# loaded in all cases, ignored by git")]),e._v("\n.env."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only loaded in specified mode")]),e._v("\n.env."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".local   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only loaded in specified mode, ignored by git")]),e._v("\n")])])]),a("p",[e._v("An env file simply contains key=value pairs of environment variables:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FOO=bar\nVUE_APP_SECRET=secret\n")])])]),a("p",[e._v("For more detailed env parsing rules, please refer to "),a("a",{attrs:{href:"https://github.com/motdotla/dotenv#rules",target:"_blank",rel:"noopener noreferrer"}},[e._v("the documentation of "),a("code",[e._v("dotenv")]),a("OutboundLink")],1),e._v(". We also use "),a("a",{attrs:{href:"https://github.com/motdotla/dotenv-expand",target:"_blank",rel:"noopener noreferrer"}},[e._v("dotenv-expand"),a("OutboundLink")],1),e._v(" for variable expansion (available in Vue CLI 3.5+).")]),e._v(" "),a("p",[e._v("Loaded variables will become available to all "),a("code",[e._v("vue-cli-service")]),e._v(" commands, plugins and dependencies.")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Env Loading Priorities")]),e._v(" "),a("p",[e._v("An env file for a specific mode (e.g. "),a("code",[e._v(".env.production")]),e._v(") will take higher priority than a generic one (e.g. "),a("code",[e._v(".env")]),e._v(").")]),e._v(" "),a("p",[e._v("In addition, environment variables that already exist when Vue CLI is executed have the highest priority and will not be overwritten by "),a("code",[e._v(".env")]),e._v(" files.")])]),e._v(" "),a("h3",{attrs:{id:"example-staging-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-staging-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Example: Staging Mode")]),e._v(" "),a("p",[e._v("Assuming we have an app with the following "),a("code",[e._v(".env")]),e._v(" file:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("VUE_APP_TITLE=My App\n")])])]),a("p",[e._v("And the following "),a("code",[e._v(".env.staging")]),e._v(" file:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NODE_ENV=production\nVUE_APP_TITLE=My App (staging)\n")])])]),a("ul",[a("li",[a("p",[a("code",[e._v("vue-cli-service build")]),e._v(" builds a production app, loading "),a("code",[e._v(".env")]),e._v(", "),a("code",[e._v(".env.production")]),e._v(" and "),a("code",[e._v(".env.production.local")]),e._v(" if they are present;")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("vue-cli-service build --mode staging")]),e._v(" builds a production app in staging mode, using "),a("code",[e._v(".env")]),e._v(", "),a("code",[e._v(".env.staging")]),e._v(" and "),a("code",[e._v(".env.staging.local")]),e._v(" if they are present.")])])]),e._v(" "),a("p",[e._v("In both cases, the app is built as a production app because of the "),a("code",[e._v("NODE_ENV")]),e._v(", but in the staging version, "),a("code",[e._v("process.env.VUE_APP_TITLE")]),e._v(" is overwritten with a different value.")]),e._v(" "),a("h3",{attrs:{id:"using-env-variables-in-client-side-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-env-variables-in-client-side-code","aria-hidden":"true"}},[e._v("#")]),e._v(" Using Env Variables in Client-side Code")]),e._v(" "),a("p",[e._v("Only variables that start with "),a("code",[e._v("VUE_APP_")]),e._v(" will be statically embedded into the client bundle with "),a("code",[e._v("webpack.DefinePlugin")]),e._v(". You can access them in your application code:")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("VUE_APP_SECRET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("p",[e._v("During build, "),a("code",[e._v("process.env.VUE_APP_SECRET")]),e._v(" will be replaced by the corresponding value. In the case of "),a("code",[e._v("VUE_APP_SECRET=secret")]),e._v(", it will be replaced by "),a("code",[e._v('"secret"')]),e._v(".")]),e._v(" "),a("p",[e._v("In addition to "),a("code",[e._v("VUE_APP_*")]),e._v(" variables, there are also two special variables that will always be available in your app code:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("NODE_ENV")]),e._v(" - this will be one of "),a("code",[e._v('"development"')]),e._v(", "),a("code",[e._v('"production"')]),e._v(" or "),a("code",[e._v('"test"')]),e._v(" depending on the "),a("a",{attrs:{href:"#modes"}},[e._v("mode")]),e._v(" the app is running in.")]),e._v(" "),a("li",[a("code",[e._v("BASE_URL")]),e._v(" - this corresponds to the "),a("code",[e._v("publicPath")]),e._v(" option in "),a("code",[e._v("vue.config.js")]),e._v(" and is the base path your app is deployed at.")])]),e._v(" "),a("p",[e._v("All resolved env variables will be available inside "),a("code",[e._v("public/index.html")]),e._v(" as discussed in "),a("router-link",{attrs:{to:"/guide/html-and-static-assets.html#interpolation"}},[e._v("HTML - Interpolation")]),e._v(".")],1),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[e._v("You can have computed env vars in your "),a("code",[e._v("vue.config.js")]),e._v(" file. They still need to be prefixed with "),a("code",[e._v("VUE_APP_")]),e._v(". This is useful for version info")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("VUE_APP_VERSION")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./package.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("version\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// config")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),a("h3",{attrs:{id:"local-only-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-only-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Local Only Variables")]),e._v(" "),a("p",[e._v("Sometimes you might have env variables that should not be committed into the codebase, especially if your project is hosted in a public repository. In that case you should use an "),a("code",[e._v(".env.local")]),e._v(" file instead. Local env files are ignored in "),a("code",[e._v(".gitignore")]),e._v(" by default.")]),e._v(" "),a("p",[a("code",[e._v(".local")]),e._v(" can also be appended to mode-specific env files, for example "),a("code",[e._v(".env.development.local")]),e._v(" will be loaded during development, and is ignored by git.")])])},[],!1,null,null,null);t.default=s.exports}}]);