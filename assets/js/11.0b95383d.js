(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{256:function(e,s,t){"use strict";t.r(s);var r=t(0),n=Object(r.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vue-cli-plugin-e2e-cypress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-plugin-e2e-cypress","aria-hidden":"true"}},[e._v("#")]),e._v(" @vue/cli-plugin-e2e-cypress")]),e._v(" "),t("blockquote",[t("p",[e._v("e2e-cypress plugin for vue-cli")])]),e._v(" "),t("p",[e._v("This adds E2E testing support using "),t("a",{attrs:{href:"https://www.cypress.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cypress"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Cypress offers a rich interactive interface for running E2E tests, but currently only supports running the tests in Chromium. If you have a hard requirement on E2E testing in multiple browsers, consider using the Selenium-based "),t("a",{attrs:{href:"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-e2e-nightwatch",target:"_blank",rel:"noopener noreferrer"}},[e._v("@vue/cli-plugin-e2e-nightwatch"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"injected-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#injected-commands","aria-hidden":"true"}},[e._v("#")]),e._v(" Injected Commands")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[t("code",[e._v("vue-cli-service test:e2e")])])]),e._v(" "),t("p",[e._v("Run e2e tests with "),t("code",[e._v("cypress run")]),e._v(".")]),e._v(" "),t("p",[e._v("By default it launches Cypress in interactive mode with a GUI. If you want to run the tests in headless mode (e.g. for CI), you can do so with the "),t("code",[e._v("--headless")]),e._v(" option.")]),e._v(" "),t("p",[e._v("The command automatically starts a server in production mode to run the e2e tests against. If you want to run the tests multiple times without having to restart the server every time, you can start the server with "),t("code",[e._v("vue-cli-service serve --mode production")]),e._v(" in one terminal, and then run e2e tests against that server using the "),t("code",[e._v("--url")]),e._v(" option.")]),e._v(" "),t("p",[e._v("Options:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('--headless run in headless mode without GUI\n--mode     specify the mode the dev server should run in. (default: production)\n--url      run e2e tests against given url instead of auto-starting dev server\n-s, --spec (headless only) runs a specific spec file. defaults to "all"\n')])])]),t("p",[e._v("Additionally:")]),e._v(" "),t("ul",[t("li",[e._v("In GUI mode, "),t("a",{attrs:{href:"https://docs.cypress.io/guides/guides/command-line.html#cypress-open",target:"_blank",rel:"noopener noreferrer"}},[e._v("all Cypress CLI options for "),t("code",[e._v("cypress open")]),e._v(" are also supported"),t("OutboundLink")],1),e._v(";")]),e._v(" "),t("li",[e._v("In "),t("code",[e._v("--headless")]),e._v(" mode, "),t("a",{attrs:{href:"https://docs.cypress.io/guides/guides/command-line.html#cypress-run",target:"_blank",rel:"noopener noreferrer"}},[e._v("all Cypress CLI options for "),t("code",[e._v("cypress run")]),e._v(" are also supported"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("p",[e._v("Examples :")]),e._v(" "),t("ul",[t("li",[e._v("Run Cypress in headless mode for a specific file: "),t("code",[e._v("vue-cli-service test:e2e --headless --spec tests/e2e/specs/actions.spec.js")])])])])]),e._v(" "),t("h2",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),t("p",[e._v("We've pre-configured Cypress to place most of the e2e testing related files under "),t("code",[e._v("<projectRoot>/tests/e2e")]),e._v(". You can also check out "),t("a",{attrs:{href:"https://docs.cypress.io/guides/references/configuration.html#Options",target:"_blank",rel:"noopener noreferrer"}},[e._v("how to configure Cypress via "),t("code",[e._v("cypress.json")]),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"environment-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment Variables")]),e._v(" "),t("p",[e._v("Cypress doesn't load .env files for your test files the same way as "),t("code",[e._v("vue-cli")]),e._v(" does for your "),t("a",{attrs:{href:"https://cli.vuejs.org/guide/mode-and-env.html#using-env-variables-in-client-side-code",target:"_blank",rel:"noopener noreferrer"}},[e._v("application code"),t("OutboundLink")],1),e._v(". Cypress supports a few ways to "),t("a",{attrs:{href:"https://docs.cypress.io/guides/guides/environment-variables.html#",target:"_blank",rel:"noopener noreferrer"}},[e._v("define env variables"),t("OutboundLink")],1),e._v(" but the easiest one is to use .json files (either "),t("code",[e._v("cypress.json")]),e._v(" or "),t("code",[e._v("cypress.env.json")]),e._v(") to define environment variables. Keep in mind those variables are accessible via "),t("code",[e._v("Cypress.env")]),e._v(" function instead of regular "),t("code",[e._v("process.env")]),e._v(" object.")]),e._v(" "),t("h2",{attrs:{id:"installing-in-an-already-created-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-in-an-already-created-project","aria-hidden":"true"}},[e._v("#")]),e._v(" Installing in an Already Created Project")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("vue "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" @vue/e2e-cypress\n")])])])])},[],!1,null,null,null);s.default=n.exports}}]);